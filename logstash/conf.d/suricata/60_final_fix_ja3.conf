filter {
  #### Base SIEM Field fixes/hacks for things like only work with packetbeat or aliases don't work for some things but work for others ####

  # Copy destination domain after Destination.IP and Source.IP alias, otherwise destination gets overwritten and thus would this field
  
  if [tls] {
   
    if [tls][client][ja3] { mutate { copy => { "[tls][client][ja3]" => "[tls][fingerprints][ja3][hash]" } } }
    if [tls][server][ja3s] { mutate { copy => { "[tls][server][ja3]" => "[tls][fingerprints][ja3s][hash]" } } }

    mutate {
      copy => {
        "[tls][client][issuer]" => "[tls][client_certificate][issuer][common_name]"
        "[tls][client][certificate][sha1]" => "[tls][client_certificate][fingerprint][sha1]"
        "[tls][client][subject]" => "[tls][client_certificate][subject][common_name]"
        "[tls][server][issuer]" => "[tls][server_certificate][issuer][common_name]"
        "[tls][server][certificate][sha1]" => "[tls][server_certificate][fingerprint][sha1]"
        "[tls][server][subject]" => "[tls][server_certificate][subject][common_name]"
      }
    }

   
    # lastly, fingerprint sha1 is used as cardinality, and zeek/suricata doesn't have this field - but is added in RockNSM as of 2019-07-10......
    # therefore, check if it exists - otherwise for now "randomize" it just to create it so siem tls stuff works.
    # also, certificates don't really happen in TLS version 1.3 - and we still want to pivot/use the other stuff capture like JA3* hashes and stuff...
    if ![tls][server_certificate][fingerprint][sha1] {
      if [tls][server][ja3s] and [tls][client][server_name] and [tls][server][issuer] and [tls][server][subject] {
        fingerprint {
          concatenate_sources => "true"
          method => "SHA1"
          source => [
            "[tls][server][ja3s]",
            "[tls][server][issuer]",
            "[tls][client][server_name]",
            "[tls][server][subject]"
          ]
          target => "[tls][server_certificate][fingerprint][sha1]"
          add_tag => "siem tls update"
        }
      }
    }     
  }

  # DNS/Domain drill down - most/all based on field dns.question.etld_plus_one exisiting. also requires the network.protocol field
  if [dns] {
    mutate {
      replace => { "[network][protocol]" =>  "dns" }
      copy => { "[domain][1n2_name]" => "[dns][question][etld_plus_one]" }
    }
    # DNS bytes hack since only works with packetbeat which tracks that
    if ![client][bytes] {
      mutate {
        add_field => {
          "[client][bytes]" =>  "0"
          "[server][bytes]" =>  "0"
        }
      }
    }
  }
   
  # Final Suricata Compatibility
  if [event][module] == "suricata" {
    mutate {
      # Overview tab - populate total event count - uses service.type
      copy => {
        "[event][module]" =>  "[service][type]"
        "[network][protocol]" => "[suricata][eve][proto]"
        "[event][original][alert][signature]" => "[suricata][eve][alert][signature]"
        "[event][original][alert][signature_id]" => "[suricata][eve][alert][signature_id]"
      }
    }
  }
}
