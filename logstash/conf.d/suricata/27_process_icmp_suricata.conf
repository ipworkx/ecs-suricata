filter {

  ## to be compatible with scripted fields 
  if [network][transport] == "ICMP" or [network][transport] == "IPv6-ICMP" {
    #
    # We use scripted fields to make alink to moloch, but scripted fields tend to result in search failures when fields are not available
    #
    mutate { 
      add_field => { 
        "[client][port]" => "0" 
        "[server][port]" => "0" 
      } 
    }
  }


  if [suricata][eve] {
    #
    # processing icmp data
    #  
    # Translate ICMP Types and Codes to text.
    if [suricata][eve][icmp_type] {
      if [suricata][eve][icmp_code] {
        mutate {
          replace => { "[@metadata][icmp_key]" => "%{[suricata][eve][icmp_type]}..%{[suricata][eve][icmp_code]}" }
        }
        if [suricata][eve][ip_version] == "IPv6" {
          translate {
            dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_icmpv6_code.yml"
            field => "[@metadata][icmp_key]"
            destination => "[suricata][eve][icmp_code]"
            override => "true"
            fallback => "unspecified (%{[suricata][eve][icmp_code]})"
            refresh_behaviour => "replace"
          }
        } else {
          translate {
            dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_icmp_code.yml"
            field => "[@metadata][icmp_key]"
            destination => "[suricata][eve][icmp_code]"
            override => "true"
            fallback => "unspecified (%{[suricata][eve][icmp_code]})"
            refresh_behaviour => "replace"
          }
        }
      } 
 
      if [ip_version] == "IPv6" {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_icmpv6_type.yml"
          field => "[suricata][eve][icmp_type]"
          destination => "[suricata][eve][icmp_type]"
          override => "true"
          fallback => "unspecified (%{[suricata][eve][icmp_type]})"
          refresh_behaviour => "replace"
        }
      } else {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_icmp_type.yml"
          field => "[suricata][eve][icmp_type]"
          destination => "[suricata][eve][icmp_type]"
          override => "true"
          fallback => "unspecified (%{[suricata][eve][icmp_type]})"
          refresh_behaviour => "replace"
        }
      }
    }
 
    if [response_icmp_type] {
      if [suricata][eve][response_icmp_code] {
        mutate {
          replace => { "[@metadata][icmp_key]" => "%{[suricata][eve][response_icmp_type]}..%{[suricata][eve][response_icmp_code]}" }
        }
        if [suricata][eve][ip_version] == "IPv6" {
          translate {
            dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_icmpv6_code.yml"
            field => "[@metadata][icmp_key]"
            destination => "[suricata][eve][response_icmp_code]"
            override => "true"
            fallback => "unspecified (%{[suricata][eve][response_icmp_code]})"
            refresh_behaviour => "replace"
          }
        } else {
          translate {
            dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_icmp_code.yml"
            field => "[@metadata][icmp_key]"
            destination => "[suricata][eve][response_icmp_code]"
            override => "true"
            fallback => "unspecified (%{[suricata][eve][response_icmp_code]})"
            refresh_behaviour => "replace"
          }
        }
      }
   
      if [ip_version] == "IPv6" {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_icmpv6_type.yml"
          field => "[suricata][eve][response_icmp_type]"
          destination => "[suricata][eve][response_icmp_type]"
          override => "true"
          fallback => "unspecified (%{[suricata][eve][response_icmp_type]})"
          refresh_behaviour => "replace"
        }
      } else {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_icmp_type.yml"
          field => "[suricata][eve][response_icmp_type]"
          destination => "[suricata][eve][response_icmp_type]"
          override => "true"
          fallback => "unspecified (%{[suricata][eve][response_icmp_type]})"
          refresh_behaviour => "replace"
        }
      }
    }
  } 
}
