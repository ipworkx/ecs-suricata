filter {
  #
  # enriching portname resolving
  #
     
  if [network][transport] {
    #
    mutate { uppercase => [ "[network][transport]" ] }
    #
    # lookup IANA service name for source and destination ports.
    if [network][transport] == "TCP"  { 
      if [client][port] {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_service_names_tcp.yml"
          field => "[client][port]"
          destination => "[client][service_name]"
          fallback => "__UNKNOWN"
          refresh_behaviour => "replace"
        }
      }
      if [server][port] {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_service_names_tcp.yml"
          field => "[server][port]"
          destination => "[server][service_name]"
          fallback => "__UNKNOWN"
          refresh_behaviour => "replace"
        }
      }
    } else if [network][transport] == "UDP"  { 
      if [client][port] {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_service_names_udp.yml"
          field => "[client][port]"
          destination => "[client][service_name]"
          fallback => "__UNKNOWN"
          refresh_behaviour => "replace"
        }
      }
      if [server][port] {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_service_names_udp.yml"
          field => "[server][port]"
          destination => "[server][service_name]"
          #fallback => "__UNKNOWN"
          refresh_behaviour => "replace"
        }
      }
    } else if [network][transport] == "SCTP"  { 
      if [client][port] {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_service_names_sctp.yml"
          field => "[client][port]"
          destination => "[client][service_name]"
          fallback => "__UNKNOWN"
          refresh_behaviour => "replace"
        }
      }
      if [server][port] {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_service_names_sctp.yml"
          field => "[server][port]"
          destination => "[server][service_name]"
          fallback => "__UNKNOWN"
          refresh_behaviour => "replace"
        }
      }
    } else if [network][transport] == "DCCP" { 
      if [client][port] {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_service_names_dccp.yml"
          field => "[client][port]"
          destination => "[client][service_name]"
          fallback => "__UNKNOWN"
          refresh_behaviour => "replace"
        }
      }
      if [server][port] {
        translate {
          dictionary_path => "/etc/logstash/conf.d/dictionaries/iana_service_names_dccp.yml"
          field => "[server][port]"
          destination => "[server][service_name]"
          fallback => "__UNKNOWN"
          refresh_behaviour => "replace"
        }
      }
    } else {
      mutate {
        add_field => {
          "[server][service_name]" => "__UNKNOWN"
          "[client][service_name]" => "__UNKNOWN"
        }
      }
    }
    
    # Ensure port numbers are integers.
    mutate {
      convert => {
        "[client][port]" => "integer"
        "[server][port]" => "integer"
      }
   }

    # Determine client and server from source and destination ports.
    if [server][port] and [client][port] {
      if [client][service_name] == "__UNKNOWN" {
        if [server][service_name] == "__UNKNOWN" {
          if [server][port] <= [client][port] {
            mutate {
              add_field => { "[@metadata][isServer]" => "dest" }
            }
          } else {
            mutate {
              add_field => { "[@metadata][isServer]" => "src" }
            }
          }
        } else {
          mutate {
            add_field => { "[@metadata][isServer]" => "dest" }
          }
        }
      } else {
        if [server][service_name] == "__UNKNOWN" {
          mutate {
            add_field => { "[@metadata][isServer]" => "src" }
          }
        } else {
          if [server][port] <= [client][port] {
            mutate {
              add_field => { "[@metadata][isServer]" => "dest" }
            }
          } else {
            mutate {
              add_field => { "[@metadata][isServer]" => "src" }
            }
          }
        }
      }
    }
    
    # Set final value of port name fields.
    if [client][service_name] {
      if [client][service_name] == "__UNKNOWN" {
        if [client][port] {
          mutate {
            replace => { "[client][service_name]" => "%{[network][transport]}/%{[client][port]}" }
          }
        } else {
          mutate {
            replace => { "[client][service_name]" => "%{[network][tranport]}/0" }
          }
        }
      } else {
        mutate {
          replace => { "[client][service_name]" => "%{[client][service_name]} (%{[network][transport]}/%{[client][port]})" }
        }
      }
    }
    if [server][service_name] {
      if [server][service_name] == "__UNKNOWN" {
        if [server][port] {
          mutate {
            replace => { "[server][service_name]" => "%{[network][transport]}/%{[server][port]}" }
          }
        } else {
          mutate {
            replace => { "[server][service_name]" => "%{[network][transport]}/0" }
          }
        }
      } else {
        mutate {
          replace => { "[server][service_name]" => "%{[server][service_name]} (%{[network][transport]}/%{[server][port]})" }
        }
      }
    }
    
    # Set global service_name field
    if [server][port] and [client][port] {
      if [client][port] >= 1024 and [server][port] <= 1024 {
        if [@metadata][isServer] == "dest" {
          mutate {
            add_field => { "[network][application]" => "%{[server][service_name]}" }
          } 
        } else if [@metadata][isServer] == "src" {
          mutate {
            add_field => { "[network][application]" => "%{[client][service_name]}" }
          }
        }
      } else {
        # Apears to be in a middle of something
        mutate {
          add_field => { "[network][application]" => "%{[server][service_name]}" }
        } 
      }
    }
  }
}
